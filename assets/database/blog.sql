-- phpMyAdmin SQL Dump
-- version 4.8.5
-- https://www.phpmyadmin.net/
--
-- Host: 127.0.0.1:3306
-- Generation Time: Feb 20, 2020 at 07:27 PM
-- Server version: 5.7.26
-- PHP Version: 7.2.18

SET SQL_MODE = "NO_AUTO_VALUE_ON_ZERO";
SET AUTOCOMMIT = 0;
START TRANSACTION;
SET time_zone = "+00:00";


/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8mb4 */;

--
-- Database: `blog`
--
CREATE DATABASE IF NOT EXISTS `blog` DEFAULT CHARACTER SET latin1 COLLATE latin1_swedish_ci;
USE `blog`;

-- --------------------------------------------------------

--
-- Table structure for table `posts`
--

DROP TABLE IF EXISTS `posts`;
CREATE TABLE IF NOT EXISTS `posts` (
  `Id` int(255) NOT NULL AUTO_INCREMENT,
  `Title` varchar(150) NOT NULL,
  `Description` longtext NOT NULL,
  `Image` varchar(1500) NOT NULL DEFAULT 'http://localhost/BlogPostCI/uploads/No_Image_Available.jpg',
  PRIMARY KEY (`Id`)
) ENGINE=MyISAM AUTO_INCREMENT=22 DEFAULT CHARSET=latin1;

--
-- Dumping data for table `posts`
--

INSERT INTO `posts` (`Id`, `Title`, `Description`, `Image`) VALUES
(16, 'History of Cloud computing', 'History\r\nCloud computing was popularized with Amazon.com releasing its Elastic Compute Cloud product in 2006.[12]\r\n\r\nReferences to the phrase \"cloud computing\" appeared as early as 1996, with the first known mention in a Compaq internal document.[13]\r\n\r\nThe cloud symbol was used to represent networks of computing equipment in the original ARPANET by as early as 1977,[14] and the CSNET by 1981[15]—both predecessors to the Internet itself. The word cloud was used as a metaphor for the Internet and a standardized cloud-like shape was used to denote a network on telephony schematics. With this simplification, the implication is that the specifics of how the end points of a network are connected are not relevant for the purposes of understanding the diagram.[citation needed]\r\n\r\nThe term cloud was used to refer to platforms for distributed computing as early as 1993, when Apple spin-off General Magic and AT&T used it in describing their (paired) Telescript and PersonaLink technologies.[16] In Wired\'s April 1994 feature \"Bill and Andy\'s Excellent Adventure II\", Andy Hertzfeld commented on Telescript, General Magic\'s distributed programming language:\r\n\r\n\"The beauty of Telescript ... is that now, instead of just having a device to program, we now have the entire Cloud out there, where a single program can go and travel to many different sources of information and create sort of a virtual service. No one had conceived that before. The example Jim White [the designer of Telescript, X.400 and ASN.1] uses now is a date-arranging service where a software agent goes to the flower store and orders flowers and then goes to the ticket shop and gets the tickets for the show, and everything is communicated to both parties.\"[17]\r\n\r\nEarly history\r\nDuring the 1960s, the initial concepts of time-sharing became popularized via RJE (Remote Job Entry);[18] this terminology was mostly associated with large vendors such as IBM and DEC. Full-time-sharing solutions were available by the early 1970s on such platforms as Multics (on GE hardware), Cambridge CTSS, and the earliest UNIX ports (on DEC hardware). Yet, the \"data center\" model where users submitted jobs to operators to run on IBM mainframes was overwhelmingly predominant.\r\n\r\nIn the 1990s, telecommunications companies, who previously offered primarily dedicated point-to-point data circuits, began offering virtual private network (VPN) services with comparable quality of service, but at a lower cost. By switching traffic as they saw fit to balance server use, they could use overall network bandwidth more effectively.[19] They began to use the cloud symbol to denote the demarcation point between what the provider was responsible for and what users were responsible for. Cloud computing extended this boundary to cover all servers as well as the network infrastructure.[20] As computers became more diffused, scientists and technologists explored ways to make large-scale computing power available to more users through time-sharing.[21] They experimented with algorithms to optimize the infrastructure, platform, and applications to prioritize CPUs and increase efficiency for end users.[22][23]\r\n\r\nThe use of the cloud metaphor for virtualized services dates at least to General Magic in 1994, where it was used to describe the universe of \"places\" that mobile agents in the Telescript environment could go. As described by Andy Hertzfeld:\r\n\r\n\"The beauty of Telescript,\" says Andy, \"is that now, instead of just having a device to program, we now have the entire Cloud out there, where a single program can go and travel to many different sources of information and create sort of a virtual service.\"[24]\r\n\r\nThe use of the cloud metaphor is credited to General Magic communications employee David Hoffman, based on long-standing use in networking and telecom. In addition to use by General Magic itself, it was also used in promoting AT&T\'s associated PersonaLink Services.[25]\r\n\r\n2000s\r\nIn August 2006, Amazon created subsidiary Amazon Web Services and introduced its Elastic Compute Cloud (EC2).[12]\r\n\r\nIn April 2008, Google released the beta version of Google App Engine.[26]\r\n\r\nIn early 2008, NASA\'s OpenNebula, enhanced in the RESERVOIR European Commission-funded project, became the first open-source software for deploying private and hybrid clouds, and for the federation of clouds.[27]\r\n\r\nBy mid-2008, Gartner saw an opportunity for cloud computing \"to shape the relationship among consumers of IT services, those who use IT services and those who sell them\"[28] and observed that \"organizations are switching from company-owned hardware and software assets to per-use service-based models\" so that the \"projected shift to computing ... will result in dramatic growth in IT products in some areas and significant reductions in other areas.\"[29]\r\n\r\nIn 2008, the U.S. National Science Foundation began the Cluster Exploratory program to fund academic research using Google-IBM cluster technology to analyze massive amounts of data,[30]\r\n\r\n2010s\r\nIn February 2010, Microsoft released Microsoft Azure, which was announced in October 2008.[31]\r\n\r\nIn July 2010, Rackspace Hosting and NASA jointly launched an open-source cloud-software initiative known as OpenStack. The OpenStack project intended to help organizations offering cloud-computing services running on standard hardware. The early code came from NASA\'s Nebula platform as well as from Rackspace\'s Cloud Files platform. As an open source offering and along with other open-source solutions such as CloudStack, Ganeti and OpenNebula, it has attracted attention by several key communities. Several studies aim at comparing these open sources offerings based on a set of criteria.[32][33][34][35][36][37][38]\r\n\r\nOn March 1, 2011, IBM announced the IBM SmartCloud framework to support Smarter Planet.[39] Among the various components of the Smarter Computing foundation, cloud computing is a critical part. On June 7, 2012, Oracle announced the Oracle Cloud.[40] This cloud offering is poised to be the first to provide users with access to an integrated set of IT solutions, including the Applications (SaaS), Platform (PaaS), and Infrastructure (IaaS) layers.[41][42][43]\r\n\r\nIn May 2012, Google Compute Engine was released in preview, before being rolled out into General Availability in December 2013.[44]\r\n\r\nIn 2019, it was revealed that Linux is most used on Microsoft Azure.[10]\r\n\r\nSimilar concepts\r\nThe goal of cloud computing is to allow users to take benefit from all of these technologies, without the need for deep knowledge about or expertise with each one of them. The cloud aims to cut costs, and helps the users focus on their core business instead of being impeded by IT obstacles.[45] The main enabling technology for cloud computing is virtualization. Virtualization software separates a physical computing device into one or more \"virtual\" devices, each of which can be easily used and managed to perform computing tasks. With operating system–level virtualization essentially creating a scalable system of multiple independent computing devices, idle computing resources can be allocated and used more efficiently. Virtualization provides the agility required to speed up IT operations, and reduces cost by increasing infrastructure utilization. Autonomic computing automates the process through which the user can provision resources on-demand. By minimizing user involvement, automation speeds up the process, reduces labor costs and reduces the possibility of human errors.[45]\r\n\r\nCloud computing uses concepts from utility computing to provide metrics for the services used. Cloud computing attempts to address QoS (quality of service) and reliability problems of other grid computing models.[45]\r\n\r\nCloud computing shares characteristics with:\r\n\r\nClient–server model—Client–server computing refers broadly to any distributed application that distinguishes between service providers (servers) and service requestors (clients).[46]\r\nComputer bureau—A service bureau providing computer services, particularly from the 1960s to 1980s.\r\nGrid computing—A form of distributed and parallel computing, whereby a \'super and virtual computer\' is composed of a cluster of networked, loosely coupled computers acting in concert to perform very large tasks.\r\nFog computing—Distributed computing paradigm that provides data, compute, storage and application services closer to client or near-user edge devices, such as network routers. Furthermore, fog computing handles data at the network level, on smart devices and on the end-user client side (e.g. mobile devices), instead of sending data to a remote location for processing.\r\nMainframe computer—Powerful computers used mainly by large organizations for critical applications, typically bulk data processing such as: census; industry and consumer statistics; police and secret intelligence services; enterprise resource planning; and financial transaction processing.\r\nUtility computing—The \"packaging of computing resources, such as computation and storage, as a metered service similar to a traditional public utility, such as electricity.\"[47][48]\r\nPeer-to-peer—A distributed architecture without the need for central coordination. Participants are both suppliers and consumers of resources (in contrast to the traditional client–server model).\r\nGreen computing\r\nCloud sandbox—A live, isolated computer environment in which a program, code or file can run without affecting the application in which it runs.\r\nCharacteristics\r\nCloud computing exhibits the following key characteristics:\r\n\r\nAgility for organizations may be improved, as cloud computing may increase users\' flexibility with re-provisioning, adding, or expanding technological infrastructure resources.\r\nCost reductions are claimed by cloud providers. A public-cloud delivery model converts capital expenditures (e.g., buying servers) to operational expenditure.[49] This purportedly lowers barriers to entry, as infrastructure is typically provided by a third party and need not be purchased for one-time or infrequent intensive computing tasks. Pricing on a utility computing basis is \"fine-grained\", with usage-based billing options. As well, less in-house IT skills are required for implementation of projects that use cloud computing.[50] The e-FISCAL project\'s state-of-the-art repository[51] contains several articles looking into cost aspects in more detail, most of them concluding that costs savings depend on the type of activities supported and the type of infrastructure available in-house.\r\nDevice and location independence[52] enable users to access systems using a web browser regardless of their location or what device they use (e.g., PC, mobile phone). As infrastructure is off-site (typically provided by a third-party) and accessed via the Internet, users can connect to it from anywhere.[50]\r\nMaintenance of cloud computing applications is easier, because they do not need to be installed on each user\'s computer and can be accessed from different places (e.g., different work locations, while travelling, etc.).\r\nMultitenancy enables sharing of resources and costs across a large pool of users thus allowing for:\r\ncentralization of infrastructure in locations with lower costs (such as real estate, electricity, etc.)\r\npeak-load capacity increases (users need not engineer and pay for the resources and equipment to meet their highest possible load-levels)\r\nutilisation and efficiency improvements for systems that are often only 10–20% utilised.[53][54]\r\nPerformance is monitored by IT experts from the service provider, and consistent and loosely coupled architectures are constructed using web services as the system interface.[50][55]\r\nProductivity may be increased when multiple users can work on the same data simultaneously, rather than waiting for it to be saved and emailed. Time may be saved as information does not need to be re-entered when fields are matched, nor do users need to install application software upgrades to their computer.[56]\r\nReliability improves with the use of multiple redundant sites, which makes well-designed cloud computing suitable for business continuity and disaster recovery.[57]\r\nScalability and elasticity via dynamic (\"on-demand\") provisioning of resources on a fine-grained, self-service basis in near real-time[58][59] (Note, the VM startup time varies by VM type, location, OS and cloud providers[58]), without users having to engineer for peak loads.[60][61][62] This gives the ability to scale up when the usage need increases or down if resources are not being used.[63] Emerging approaches for managing elasticity include the use of machine learning techniques to propose efficient elasticity models.[64]\r\nSecurity can improve due to centralization of data, increased security-focused resources, etc., but concerns can persist about loss of control over certain sensitive data, and the lack of security for stored kernels. Security is often as good as or better than other traditional systems, in part because service providers are able to devote resources to solving security issues that many customers cannot afford to tackle or which they lack the technical skills to address.[65] However, the complexity of security is greatly increased when data is distributed over a wider area or over a greater number of devices, as well as in multi-tenant systems shared by unrelated users. In addition, user access to security audit logs may be difficult or impossible. Private cloud installations are in part motivated by users\' desire to retain control over the infrastructure and avoid losing control of information security.\r\nThe National Institute of Standards and Technology\'s definition of cloud computing identifies \"five essential characteristics\":\r\n\r\nOn-demand self-service. A consumer can unilaterally provision computing capabilities, such as server time and network storage, as needed automatically without requiring human interaction with each service provider.\r\n\r\nBroad network access. Capabilities are available over the network and accessed through standard mechanisms that promote use by heterogeneous thin or thick client platforms (e.g., mobile phones, tablets, laptops, and workstations).\r\n\r\nResource pooling. The provider\'s computing resources are pooled to serve multiple consumers using a multi-tenant model, with different physical and virtual resources dynamically assigned and reassigned according to consumer demand. \r\n\r\nRapid elasticity. Capabilities can be elastically provisioned and released, in some cases automatically, to scale rapidly outward and inward commensurate with demand. To the consumer, the capabilities available for provisioning often appear unlimited and can be appropriated in any quantity at any time.\r\n\r\nMeasured service. Cloud systems automatically control and optimize resource use by leveraging a metering capability at some level of abstraction appropriate to the type of service (e.g., storage, processing, bandwidth, and active user accounts). Resource usage can be monitored, controlled, and reported, providing transparency for both the provider and consumer of the utilized service.\r\n\r\n—?National Institute of Standards and Technology[66]\r\n\r\nInfrastructure as a service (IaaS)\r\nMain article: Infrastructure as a service\r\n\"Infrastructure as a service\" (IaaS) refers to online services that provide high-level APIs used to dereference various low-level details of underlying network infrastructure like physical computing resources, location, data partitioning, scaling, security, backup etc. A hypervisor runs the virtual machines as guests. Pools of hypervisors within the cloud operational system can support large numbers of virtual machines and the ability to scale services up and down according to customers\' varying requirements. Linux containers run in isolated partitions of a single Linux kernel running directly on the physical hardware. Linux cgroups and namespaces are the underlying Linux kernel technologies used to isolate, secure and manage the containers. Containerisation offers higher performance than virtualization, because there is no hypervisor overhead. Also, container capacity auto-scales dynamically with computing load, which eliminates the problem of over-provisioning and enables usage-based billing.[68] IaaS clouds often offer additional resources such as a virtual-machine disk-image library, raw block storage, file or object storage, firewalls, load balancers, IP addresses, virtual local area networks (VLANs), and software bundles.[69]\r\n\r\nThe NIST\'s definition of cloud computing describes IaaS as \"where the consumer is able to deploy and run arbitrary software, which can include operating systems and applications. The consumer does not manage or control the underlying cloud infrastructure but has control over operating systems, storage, and deployed applications; and possibly limited control of select networking components (e.g., host firewalls).\"[66]\r\n\r\nIaaS-cloud providers supply these resources on-demand from their large pools of equipment installed in data centers. For wide-area connectivity, customers can use either the Internet or carrier clouds (dedicated virtual private networks). To deploy their applications, cloud users install operating-system images and their application software on the cloud infrastructure. In this model, the cloud user patches and maintains the operating systems and the application software. Cloud providers typically bill IaaS services on a utility computing basis: cost reflects the amount of resources allocated and consumed.[citation needed]\r\n\r\nPlatform as a service (PaaS)\r\nMain article: Platform as a service\r\nThe NIST\'s definition of cloud computing defines Platform as a Service as:[66]\r\n\r\nThe capability provided to the consumer is to deploy onto the cloud infrastructure consumer-created or acquired applications created using programming languages, libraries, services, and tools supported by the provider. The consumer does not manage or control the underlying cloud infrastructure including network, servers, operating systems, or storage, but has control over the deployed applications and possibly configuration settings for the application-hosting environment.\r\n\r\nPaaS vendors offer a development environment to application developers. The provider typically develops toolkit and standards for development and channels for distribution and payment. In the PaaS models, cloud providers deliver a computing platform, typically including operating system, programming-language execution environment, database, and web server. Application developers develop and run their software on a cloud platform instead of directly buying and managing the underlying hardware and software layers. With some PaaS, the underlying computer and storage resources scale automatically to match application demand so that the cloud user does not have to allocate resources manually.[70][need quotation to verify]\r\n\r\nSome integration and data management providers also use specialized applications of PaaS as delivery models for data. Examples include iPaaS (Integration Platform as a Service) and dPaaS (Data Platform as a Service). iPaaS enables customers to develop, execute and govern integration flows.[71] Under the iPaaS integration model, customers drive the development and deployment of integrations without installing or managing any hardware or middleware.[72] dPaaS delivers integration—and data-management—products as a fully managed service.[73] Under the dPaaS model, the PaaS provider, not the customer, manages the development and execution of programs by building data applications for the customer. dPaaS users access data through data-visualization tools.[74] Platform as a Service (PaaS) consumers do not manage or control the underlying cloud infrastructure including network, servers, operating systems, or storage, but have control over the deployed applications and possibly configuration settings for the application-hosting environment.\r\n\r\nSoftware as a service (SaaS)\r\nMain article: Software as a service\r\nThe NIST\'s definition of cloud computing defines Software as a Service as:[66]\r\n\r\nThe capability provided to the consumer is to use the provider\'s applications running on a cloud infrastructure. The applications are accessible from various client devices through either a thin client interface, such as a web browser (e.g., web-based email), or a program interface. The consumer does not manage or control the underlying cloud infrastructure including network, servers, operating systems, storage, or even individual application capabilities, with the possible exception of limited user-specific application configuration settings.\r\n\r\nIn the software as a service (SaaS) model, users gain access to application software and databases. Cloud providers manage the infrastructure and platforms that run the applications. SaaS is sometimes referred to as \"on-demand software\" and is usually priced on a pay-per-use basis or using a subscription fee.[75] In the SaaS model, cloud providers install and operate application software in the cloud and cloud users access the software from cloud clients. Cloud users do not manage the cloud infrastructure and platform where the application runs. This eliminates the need to install and run the application on the cloud user\'s own computers, which simplifies maintenance and support. Cloud applications differ from other applications in their scalability—which can be achieved by cloning tasks onto multiple virtual machines at run-time to meet changing work demand.[76] Load balancers distribute the work over the set of virtual machines. This process is transparent to the cloud user, who sees only a single access-point. To accommodate a large number of cloud users, cloud applications can be multitenant, meaning that any machine may serve more than one cloud-user organization.\r\n\r\nThe pricing model for SaaS applications is typically a monthly or yearly flat fee per user,[77] so prices become scalable and adjustable if users are added or removed at any point. It may also be free.[78] Proponents claim that SaaS gives a business the potential to reduce IT operational costs by outsourcing hardware and software maintenance and support to the cloud provider. This enables the business to reallocate IT operations costs away from hardware/software spending and from personnel expenses, towards meeting other goals. In addition, with applications hosted centrally, updates can be released without the need for users to install new software. One drawback of SaaS comes with storing the users\' data on the cloud provider\'s server. As a result,[citation needed] there could be unauthorized access to the data.[citation needed] Examples of applications offered as SaaS are games and productivity software like Google Docs and Word Online. SaaS applications may be integrated with cloud storage or File hosting services, which is the case with Google Docs being integrated with Google Drive and Word Online being integrated with Onedrive.\r\n\r\nMobile \"backend\" as a service (MBaaS)\r\nMain article: Mobile backend as a service\r\nIn the mobile \"backend\" as a service (m) model, also known as backend as a service (BaaS), web app and mobile app developers are provided with a way to link their applications to cloud storage and cloud computing services with application programming interfaces (APIs) exposed to their applications and custom software development kits (SDKs). Services include user management, push notifications, integration with social networking services[79] and more. This is a relatively recent model in cloud computing,[80] with most BaaS startups dating from 2011 or later[81][82][83] but trends indicate that these services are gaining significant mainstream traction with enterprise consumers.[84]\r\n\r\nServerless computing\r\nMain article: Serverless computing\r\nServerless computing is a cloud computing code execution model in which the cloud provider fully manages starting and stopping virtual machines as necessary to serve requests, and requests are billed by an abstract measure of the resources required to satisfy the request, rather than per virtual machine, per hour.[85] Despite the name, it does not actually involve running code without servers.[85] Serverless computing is so named because the business or person that owns the system does not have to purchase, rent or provision servers or virtual machines for the back-end code to run on.\r\n\r\nFunction as a service (FaaS)\r\nMain article: Function as a service\r\nFunction as a service (FaaS) is a service-hosted remote procedure call that leverages serverless computing to enable the deployment of individual functions in the cloud that run in response to events.[86] FaaS is included under the broader term serverless computing, but the terms may also be used interchangeably.[87]', 'http://localhost/BlogPostCI/uploads/No_Image_Available.jpg'),
(14, 'What is iCloud?', 'What is iCloud?\r\niCloud stores your content securely and keeps your apps up to date across all your devices. That means all your stuff—photos, files, notes, and more—is safe and available wherever you are. iCloud comes with 5 GB of free storage and you can add more storage at any time.\r\n\r\nWith iCloud, changes you make on one device appear on all your other devices. You can also access web versions of your favorite apps, like Photos, Mail, and Notes on iCloud.com. Just sign in from any supported web browser.', 'http://localhost/BlogPostCI/uploads/No_Image_Available.jpg'),
(15, 'Cloud computing', 'Cloud computing is the on-demand availability of computer system resources, especially data storage and computing power, without direct active management by the user. The term is generally used to describe data centers available to many users over the Internet. Large clouds, predominant today, often have functions distributed over multiple locations from central servers. If the connection to the user is relatively close, it may be designated an edge server.\r\n\r\nClouds may be limited to a single organization (enterprise clouds[1][2]), or be available to many organizations (public cloud).\r\n\r\nCloud computing relies on sharing of resources to achieve coherence and economies of scale.\r\n\r\nAdvocates of public and hybrid clouds note that cloud computing allows companies to avoid or minimize up-front IT infrastructure costs. Proponents also claim that cloud computing allows enterprises to get their applications up and running faster, with improved manageability and less maintenance, and that it enables IT teams to more rapidly adjust resources to meet fluctuating and unpredictable demand,[2][3][4] providing the burst computing capability: high computing power at certain periods of peak demand.[5]\r\n\r\nCloud providers typically use a \"pay-as-you-go\" model, which can lead to unexpected operating expenses if administrators are not familiarized with cloud-pricing models.[6]\r\n\r\nThe availability of high-capacity networks, low-cost computers and storage devices as well as the widespread adoption of hardware virtualization, service-oriented architecture and autonomic and utility computing has led to growth in cloud computing.[7][8][9] By 2019, Linux was the most widely used operating system, including in Microsoft\'s offerings and is thus described as dominant.[10] The Cloud Service Provider (CSP) will screen, keep up and gather data about the firewalls, intrusion identification or/and counteractive action frameworks and information stream inside the network', 'http://localhost/BlogPostCI/uploads/No_Image_Available.jpg'),
(19, 'Computing', 'Computing is any activity that uses computers to manage, process, and communicate information. It includes development of both hardware and software. Computing is a critical, integral component of modern industrial technology.', 'http://localhost/BlogPostCI/uploads/No_Image_Available.jpg'),
(20, 'What is PHP?', 'PHP is a server side scripting language. that is used to develop Static websites or Dynamic websites or Web applications. PHP stands for Hypertext Pre-processor, that earlier stood for Personal Home Pages.\r\n\r\nPHP scripts can only be interpreted on a server that has PHP installed.\r\n\r\nThe client computers accessing the PHP scripts require a web browser only.\r\n\r\nA PHP file contains PHP tags and ends with the extension \".php\".', 'http://localhost/BlogPostCI/uploads/No_Image_Available.jpg'),
(21, 'What is a Scripting Language?', 'A script is a set of programming instructions that is interpreted at runtime.\r\nA scripting language is a language that interprets scripts at runtime. Scripts are usually embedded into other software environments.\r\n\r\nThe purpose of the scripts is usually to enhance the performance or perform routine tasks for an application.\r\n\r\nServer side scripts are interpreted on the server while client side scripts are interpreted by the client application.\r\n\r\nPHP is a server side script that is interpreted on the server while JavaScript is an example of a client side script that is interpreted by the client browser. Both PHP and JavaScript can be embedded into HTML pages.\r\n\r\nProgramming Language Vs Scripting Language\r\nProgramming language	Scripting language\r\nHas all the features needed to develop complete applications.	Mostly used for routine tasks\r\nThe code has to be compiled before it can be executed	The code is usually executed without compiling\r\nDoes not need to be embedded into other languages	Is usually embedded into other software environments.\r\nWhat does PHP stand for?\r\nPHP means - Personal Home Page, but it now stands for the recursive backronym PHP: Hypertext Preprocessor.\r\nPHP code may be embedded into HTML code, or it can be used in combination with various web template systems, web content management system and web frameworks.\r\n\r\nPhp Syntax\r\n\r\nWhat is PHP? Write your first PHP Program\r\n\r\nA PHP file can also contain tags such as HTML and client side scripts such as JavaScript.\r\n\r\nHTML is an added advantage when learning PHP Language. You can even learn PHP without knowing HTML but it’s recommended you at least know the basics of HTML.\r\nDatabase management systems DBMS for database powered applications.\r\nFor more advanced topics such as interactive applications and web services, you will need JavaScript and XML.\r\nThe flowchart diagram shown below illustrates the basic architecture of a PHP web application and how the server handles the requests.\r\n\r\nWhat is PHP? Write your first PHP Program\r\n\r\nWhy use PHP?\r\nYou have obviously heard of a number of programming languages out there; you may be wondering why we would want to use PHP as our poison for the web programming. Below are some of the compelling reasons.\r\n\r\nPHP is open source and free.\r\nShort learning curve compared to other languages such as JSP, ASP etc.\r\nLarge community document\r\nMost web hosting servers support PHP by default unlike other languages such as ASP that need IIS. This makes PHP a cost effective choice.\r\nPHP is regular updated to keep abreast with the latest technology trends.\r\nOther benefit that you get with PHP is that it’s a server side scripting language; this means you only need to install it on the server and client computers requesting for resources from the server do not need to have PHP installed; only a web browser would be enough.\r\nPHP has in built support for working hand in hand with MySQL; this doesn’t mean you can’t use PHP with other database management systems. You can still use PHP with\r\nPostgres\r\nOracle\r\nMS SQL Server\r\nODBC etc.\r\nPHP is cross platform; this means you can deploy your application on a number of different operating systems such as windows, Linux, Mac OS etc.\r\nWhat is PHP used for & Market share\r\nIn terms of market share, there are over 20 million websites and application on the internet developed using PHP scripting language.\r\n\r\nThis may be attributed to the points raised above;\r\n\r\nThe diagram below shows some of the popular sites that use PHP\r\n\r\nWhat is PHP? Write your first PHP Program\r\n\r\nPHP vs Asp.Net VS JSP VS CFML\r\nASP – Active Server Pages, JSP – Java Server Pages, CFML – Cold Fusion Markup language The table below compares the various server side scripting languages with PHP\r\n\r\nFEATURE	PHP	ASP	JSP	CFML\r\nLearning curve	short	Longer than PHP	Longer than PHP	Longer than PHP\r\nWeb hosting	Supported by almost all hosting servers	Needs dedicated server	Fairly supported	Needs dedicated server\r\nOpen source	Yes	No	Yes	Both commercial and open source\r\nWeb services support	Built in	Uses the .NET framework	Uses add on libraries	Built in\r\nIntegration with HTML	Easy	Fairly complex	Fairly complex	Easy\r\nMySQL support	Native	Needs third party drivers	Needs third party drivers	Current version has native support. Older versions use ODBC\r\nEasily extended by other languages	Yes	No	Extended using Java classes and libraries.	Yes\r\n \r\n\r\nPHP File Extensions\r\nFile extension and Tags In order for the server to identify our PHP files and scripts, we must save the file with the “.php” extension. Older PHP file extensions include\r\n\r\n.phtml\r\n.php3\r\n.php4\r\n.php5\r\n.phps\r\nPHP was designed to work with HTML, and as such, it can be embedded into the HTML code.\r\n\r\nWhat is PHP? Write your first PHP Program\r\n\r\nYou can create PHP files without any html tags and that is called Pure PHP file .\r\n\r\nThe server interprets the PHP code and outputs the results as HTML code to the web browsers.\r\n\r\nIn order for the server to identify the PHP code from the HTML code, we must always enclose the PHP code in PHP tags.\r\n\r\nA PHP tag starts with the less than symbol followed by the question mark and then the words “php”.\r\n\r\nPHP is a case sensitive language, “VAR” is not the same as “var”.\r\n\r\nThe PHP tags themselves are not case-sensitive, but it is strongly recommended that we use lower case letter. The code below   illustrates the above point.\r\n\r\n<?php … ?>\r\nWe will be referring to the PHP lines of code as statements. PHP statements end with a semi colon (;). If you only have one statement, you can omit the semi colon. If you have more than one statement, then you must end each line with a semi colon. For the sake of consistency, it is recommended that you always end your statement(s) with a semi colon.  PHP scripts are executed on the server. The output is returned in form of HTML.\r\n\r\nPHP Hello world\r\nThe program shown below is a basic PHP application that outputs the words “Hello World!” When viewed in a web browser.\r\n\r\n<?php\r\necho \"Hello world\";\r\n?>\r\nOutput:\r\n\r\nHello world\r\nSummary\r\nPHP stands for Hypertext pre-processor\r\nPHP is a server side scripting language. This means that it is executed on the server. The client applications do not need to have PHP installed.\r\nPHP files are saved with the \".php\" file extension, and the PHP development code is enclosed in tags.\r\nPHP is open source and cross platform', 'http://localhost/BlogPostCI/uploads/No_Image_Available.jpg');

-- --------------------------------------------------------

--
-- Table structure for table `users`
--

DROP TABLE IF EXISTS `users`;
CREATE TABLE IF NOT EXISTS `users` (
  `userID` int(255) NOT NULL AUTO_INCREMENT,
  `userName` varchar(150) NOT NULL,
  `email` varchar(255) NOT NULL,
  `password` varchar(50) NOT NULL,
  `roleID` int(255) NOT NULL,
  `mobile` int(10) NOT NULL,
  PRIMARY KEY (`userID`)
) ENGINE=MyISAM AUTO_INCREMENT=11 DEFAULT CHARSET=latin1;

--
-- Dumping data for table `users`
--

INSERT INTO `users` (`userID`, `userName`, `email`, `password`, `roleID`, `mobile`) VALUES
(5, 'Silva', 'silva123@gmail', 's123', 2, 766171524),
(8, 'Fernando', 'manishprashangamage23@gmail.com', '123', 2, 766171524),
(1, 'Manish', 'manishprashangamage23@gmail.com', 'mp123', 1, 766171525),
(9, 'Perera', 'anushka@bestjobslk.com', 'p123', 2, 766171525),
(10, 'Oshani', 'oshani@gmail.com', 'o123', 2, 766171534);

-- --------------------------------------------------------

--
-- Table structure for table `user_role`
--

DROP TABLE IF EXISTS `user_role`;
CREATE TABLE IF NOT EXISTS `user_role` (
  `roleID` int(255) NOT NULL AUTO_INCREMENT,
  `userRole` varchar(20) NOT NULL,
  PRIMARY KEY (`roleID`)
) ENGINE=MyISAM AUTO_INCREMENT=3 DEFAULT CHARSET=latin1;

--
-- Dumping data for table `user_role`
--

INSERT INTO `user_role` (`roleID`, `userRole`) VALUES
(1, 'Admin'),
(2, 'Subscriber');
COMMIT;

/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
